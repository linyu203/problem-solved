369.plus-one-linked-list
https://leetcode.com/problems/plus-one-linked-list/
Given a non-negative integer represented as non-empty a singly linked list of digits, plus one to the integer.

You may assume the integer do not contain any leading zero, except the number 0 itself.

The digits are stored such that the most significant digit is at the head of the list.

Example :

Input: [1,2,3]
Output: [1,2,4]


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* plusOne(ListNode* head) {
        //method: reverse->+1->reverse
        if(!head){return NULL;}  
        const int N=1;
        ListNode* tail= reverse(head);
        ListNode* cur=tail;
        ListNode* last=tail;
        int carry=(cur->val+N)/10;
        cur->val=(cur->val+N)%10;
        cur=cur->next;
        while(carry || cur){
          if(carry==0){
              break;
          }
          else if (!cur){
              last->next=new ListNode(carry);
              break;
          }
          int sum=cur->val+carry;
          carry=sum / 10;
          cur->val=sum % 10;
          last=cur;
          cur=cur->next;
        }
        return reverse(tail);
        
    }
        
private:
    ListNode* reverse(ListNode* head){
        if(!head){
            return head;
        }
        ListNode* prev=NULL;
        ListNode* cur=head;
        while(cur->next){
            ListNode* temp=cur;
            cur=cur->next;
            temp->next=prev;
            prev=temp;
        }
        cur->next=prev;
        return cur;
    }
};
