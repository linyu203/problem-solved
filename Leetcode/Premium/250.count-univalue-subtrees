250.count-univalue-subtrees
https://leetcode.com/problems/count-univalue-subtrees/

Given a binary tree, count the number of uni-value subtrees.

A Uni-value subtree means all nodes of the subtree have the same value.

Example :

Input:  root = [5,1,5,5,5,null,5]

              5
             / \
            1   5
           / \   \
          5   5   5

Output: 4

Added a boolean function to determine whether a tree is unival.

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isUnivalTree ( TreeNode * root ) {
    if (root==nullptr) return false;
    return ( (isUnivalTree(root->left) && root->left->val==root->val) || root->left==nullptr )
    && ( (isUnivalTree(root->right) && root->right->val==root->val) || root->right==nullptr );
  }

int countUnivalSubtrees(TreeNode* root) {
    if (!root) return 0;
    int isUnival = isUnivalTree(root) ? 1 : 0;
    return isUnival + countUnivalSubtrees(root->left) + countUnivalSubtrees(root->right);
}
};
