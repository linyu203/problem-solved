https://leetcode.com/problems/reverse-words-in-a-string-ii/
186.reverse-words-in-a-string-ii
Given an input string , reverse the string word by word. 

Example:

Input:  ["t","h","e"," ","s","k","y"," ","i","s"," ","b","l","u","e"]
Output: ["b","l","u","e"," ","i","s"," ","s","k","y"," ","t","h","e"]
Note: 

A word is defined as a sequence of non-space characters.
The input string does not contain leading or trailing spaces.
The words are always separated by a single space.
Follow up: Could you do it in-place without allocating extra space?



class Solution {
    void rw(vector<char>& str, int st, int end){
        while(st<end){
            swap(str[st++],str[end--]);
        }
    }
public:
    void reverseWords(vector<char>& str) {
        int st = 0;
        int n = str.size();
        for(int i = 0;i <= n; i++){
            if(i==n || str[i]==' '){
                rw(str,st,i-1);
                st = i+1;
            }
        }
        rw(str,0,n-1);
    }
};
