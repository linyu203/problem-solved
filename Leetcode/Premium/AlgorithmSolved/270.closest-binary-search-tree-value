https://leetcode.com/problems/closest-binary-search-tree-value/
270.closest-binary-search-tree-value
Given a non-empty binary search tree and a target value, find the value in the BST that is closest to the target.

Note:

Given target value is a floating point.
You are guaranteed to have only one unique value in the BST that is closest to the target.
Example:

Input: root = [4,2,5,1,3], target = 3.714286

    4
   / \
  2   5
 / \
1   3

Output: 4

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
    double diff;
    void dfs(TreeNode* root, double target,int&res){
        if(!root)return;
        if(abs(root->val-target)<diff){
            res = root->val;
            diff = abs(res-target);
        }
        dfs(root->left,target,res);
        dfs(root->right,target,res);
    }
public:
    int closestValue(TreeNode* root, double target) {
        diff = INT_MAX+1l;
        diff *=2.0;
        int res=-1;
        dfs(root,target, res);
        return res;
    }
};
